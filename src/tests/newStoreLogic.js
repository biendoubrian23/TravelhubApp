// SECTION DE REMPLACEMENT COMPLÃˆTE POUR store/index.js
// Lignes ~350-420 Ã  remplacer

// NOUVEAU CODE CORRECT (sans groupement):
const newLoadBookingsSection = `
          if (data && data.length > 0) {
            console.log('ğŸ“‹ DonnÃ©es brutes de Supabase:', data.length, 'rÃ©servations');
            
            // ğŸš« SUPPRESSION DU GROUPEMENT - Chaque rÃ©servation reste sÃ©parÃ©e
            // Transformer chaque rÃ©servation individuellement (PAS de groupement)
            const transformedBookings = data.map((booking) => {
              const trip = booking.trips || {};
              const agency = trip.agencies || {};
              
              console.log('ğŸ”„ Transformation individuelle:', {
                bookingId: booking.id,
                bookingRef: booking.booking_reference,
                siege: booking.seat_number,
                prix: booking.total_price_fcfa,
                ville_depart: trip.ville_depart,
                ville_arrivee: trip.ville_arrivee
              });
              
              return {
                id: booking.id,
                departure: trip.ville_depart || 'Ville inconnue',
                arrival: trip.ville_arrivee || 'Ville inconnue', 
                date: trip.date || new Date().toISOString().split('T')[0],
                time: trip.heure_dep || '00:00',
                price: booking.total_price_fcfa || 0, // Prix individuel de la rÃ©servation
                status: booking.booking_status === 'confirmed' ? 'upcoming' : (booking.booking_status || 'pending'),
                busType: trip.bus_type || 'standard',
                agency: agency.nom || 'TravelHub',
                seatNumber: booking.seat_number || 'N/A', // UN SEUL siÃ¨ge
                seatNumbers: [booking.seat_number], // Array avec UN seul siÃ¨ge
                bookingDate: booking.created_at,
                bookingReference: booking.booking_reference,
                passengerName: booking.passenger_name || 'Nom non dÃ©fini',
                passengerPhone: booking.passenger_phone || 'Non dÃ©fini',
                paymentMethod: booking.payment_method || 'Non spÃ©cifiÃ©',
                paymentStatus: booking.payment_status || 'pending',
                // Informations du trajet pour affichage dÃ©taillÃ©
                trip: trip,
                trip_id: booking.trip_id,
                supabaseId: booking.id, // ID de la BD
                syncedWithDB: true,
                multiSeat: false, // Toujours false maintenant - chaque rÃ©servation est individuelle
                allBookingIds: [booking.id] // Un seul ID par rÃ©servation
              };
            }).filter(booking => booking.id); // Filtrer les rÃ©servations sans ID
`;

console.log('âœ… Section de remplacement prÃ©parÃ©e pour store/index.js');
console.log('ğŸ”§ Cette correction supprime le groupement des rÃ©servations');
console.log('ğŸ“± RÃ©sultat: Chaque rÃ©servation sera affichÃ©e sÃ©parÃ©ment');

export { newLoadBookingsSection };
