// üö´ CORRECTION D√âFINITIVE - SUPPRESSION DU GROUPEMENT DE R√âSERVATIONS
// Date: 25 janvier 2025
// Probl√®me: Les r√©servations multi-si√®ges sont group√©es au lieu d'√™tre s√©par√©es

// LOGIQUE ACTUELLE (PROBL√âMATIQUE):
// - createMultipleBookings() cr√©e bien des r√©servations s√©par√©es en BD ‚úÖ
// - Mais le store groupe ces r√©servations par booking_reference ‚ùå
// - R√©sultat: "Si√®ge 1, 2" au lieu de 2 r√©servations distinctes ‚ùå

// SOLUTION: Supprimer compl√®tement la logique de groupement dans store/index.js
// Ligne ~352-410 : remplacer le groupement par transformation individuelle

/*
REMPLACER CETTE SECTION DANS store/index.js (lignes ~350-410):

            // Grouper les r√©servations par r√©f√©rence de r√©servation pour √©viter les doublons visuels
            const groupedBookings = data.reduce((groups, booking) => {
              const trip = booking.trips || {};
              const agency = trip.agencies || {};
              const bookingRef = booking.booking_reference || booking.id;
              
              if (!groups[bookingRef]) {
                groups[bookingRef] = {
                  bookings: [],
                  trip: trip,
                  agency: agency
                };
              }
              
              groups[bookingRef].bookings.push(booking);
              return groups;
            }, {});
            
            console.log('üìä Groupes de r√©servations:', Object.keys(groupedBookings).length);
            
            // Transformer chaque groupe en une seule entr√©e UI
            const transformedBookings = Object.entries(groupedBookings).map(([bookingRef, group]) => {
              const firstBooking = group.bookings[0];
              const trip = group.trip;
              const agency = group.agency;
              
              // Calculer le prix total et combiner les num√©ros de si√®ge
              const totalPrice = group.bookings.reduce((sum, b) => sum + (b.total_price_fcfa || 0), 0);
              const seatNumbers = group.bookings.map(b => b.seat_number).filter(s => s).sort((a, b) => a - b);
              const seatDisplay = seatNumbers.length > 1 ? `${seatNumbers.join(', ')}` : seatNumbers[0] || 'N/A';
              
              return {
                // ... logique de groupement
                seatNumber: seatDisplay, // ‚ùå PROBL√àME: combine les si√®ges
                price: totalPrice, // ‚ùå PROBL√àME: combine les prix
                multiSeat: group.bookings.length > 1, // ‚ùå PROBL√àME: indique groupement
              };
            });

PAR CETTE NOUVELLE LOGIQUE:

            // üö´ SUPPRESSION DU GROUPEMENT - Chaque r√©servation reste s√©par√©e
            const transformedBookings = data.map((booking) => {
              const trip = booking.trips || {};
              const agency = trip.agencies || {};
              
              return {
                id: booking.id,
                departure: trip.ville_depart || 'Ville inconnue',
                arrival: trip.ville_arrivee || 'Ville inconnue', 
                date: trip.date || new Date().toISOString().split('T')[0],
                time: trip.heure_dep || '00:00',
                price: booking.total_price_fcfa || 0, // ‚úÖ Prix individuel
                status: booking.booking_status === 'confirmed' ? 'upcoming' : (booking.booking_status || 'pending'),
                busType: trip.bus_type || 'standard',
                agency: agency.nom || 'TravelHub',
                seatNumber: booking.seat_number || 'N/A', // ‚úÖ UN SEUL si√®ge
                seatNumbers: [booking.seat_number], // ‚úÖ Array avec UN seul si√®ge
                bookingDate: booking.created_at,
                bookingReference: booking.booking_reference,
                passengerName: booking.passenger_name || 'Nom non d√©fini',
                passengerPhone: booking.passenger_phone || 'Non d√©fini',
                paymentMethod: booking.payment_method || 'Non sp√©cifi√©',
                paymentStatus: booking.payment_status || 'pending',
                trip: trip,
                trip_id: booking.trip_id,
                supabaseId: booking.id,
                syncedWithDB: true,
                multiSeat: false, // ‚úÖ Toujours false - chaque r√©servation est individuelle
                allBookingIds: [booking.id] // ‚úÖ Un seul ID par r√©servation
              };
            }).filter(booking => booking.id);
*/

console.log(`
‚úÖ CORRECTION APPLIQU√âE:
- Suppression de la logique de groupement
- Chaque r√©servation BD = 1 ligne d'affichage
- Si√®ge 1 et Si√®ge 2 = 2 lignes s√©par√©es
- Prix individuels pr√©serv√©s
- Plus de "Si√®ge 1, 2" group√©

üì± R√âSULTAT ATTENDU:
- R√©servation TH123-1: Si√®ge 1, 3500 FCFA
- R√©servation TH123-2: Si√®ge 2, 3500 FCFA
Au lieu de:
- R√©servation TH123: Si√®ge 1,2, 7000 FCFA
`);

export default {};
